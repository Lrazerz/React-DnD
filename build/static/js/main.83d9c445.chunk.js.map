{"version":3,"sources":["components/layout/Alert/Alert.module.css","redux/reducers/board.js","constants/boardDimensions.js","redux/reducers/alert.js","redux/reducers/draggedItem.js","constants/dnd/types.js","redux/reducers/equippedItems.js","redux/reducers/index.js","redux/actions/types.js","redux/store.js","constants/css/theme.js","components/square/Square.tsx","redux/actions/alert.js","redux/actions/board.js","components/square/Overlay.js","redux/actions/draggedItem.js","containers/BoardSquare/BoardSquare.js","components/items/CommonItem/CommonItem.tsx","containers/SquareCommonItem/SquareCommonItem.js","redux/actions/equippedItems.js","components/board/Board.tsx","components/layout/Alert/Alert.js","components/equippedInventory/equippedInventoryItem/equippedInventoryItem.js","components/equippedInventory/equippedInventoryContainer.js","App.tsx","index.js"],"names":["module","exports","_fillInitialSquares","x","y","mainCell","width","height","_fillInitialState","board","initialState","xUp","xDown","yUp","yDown","hoveredSquare","allHoveredSquares","canDrop","ItemTypes","fillInitialState","cells","i","id","allowedItemType","item","combineReducers","state","action","type","newBoard","squares","forEach","square","alert","filter","alertId","draggedItem","point","equippedItems","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","breakpoints","md","colors","gray","black","lighterGray","lightGray","success","warning","danger","Container","styled","div","theme","Square","children","_setAlert","_removeAlert","_addInventory","boxId","dispatch","getState","allAddedSquares","alertMsg","j","push","canAdd","hoveredX","hoveredY","_addItems","msg","alertType","timeout","uuid4","setTimeout","setAlert","window","addInventory","store","_removeItems","coordsArr","removeItems","itemsToRemove","currX","currY","Overlay","color","style","position","top","left","zIndex","opacity","backgroundColor","_addDraggedItem","Div","BoardSquare","coords","useState","isOver","setIsOver","useSelector","canDropRedux","useDispatch","useDrop","accept","drop","monitor","isInventoryId","addItems","hover","pointCoords","_setHoveredSquares","setHoveredSquares","useEffect","idx","findIndex","el","ref","Span","span","CommonItem","forwardedRef","SquareCommonItem","useDrag","begin","mainCellX","mainCellY","addDraggedItem","end","cellId","console","log","didDrop","_removeEquippedItem","collect","drag","Board","boardItems","boardHeight","setBoardHeight","boardEl","useRef","handleResize","current","clientWidth","addEventListener","removeEventListener","renderSquare","squareContent","key","Alert","alerts","length","map","className","classes","innerWidth","toString","EquippedInventoryItem","_setEquippedItem","setEquippedItem","find","cell","shallow","green","EquippedInventoryContainer","App","equippedItemsCells","DndProvider","backend","HTML5Backend","slice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83d9c445.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Alert\":\"Alert_Alert__2OSub\",\"alert-danger\":\"Alert_alert-danger__JpjkH\",\"alert-success\":\"Alert_alert-success__VexSb\"};","import {xMin, xMax, yMin, yMax} from \"../../constants/boardDimensions\";\r\nimport {SQUARES_FILL, SQUARES_RELEASE} from \"../actions/types\";\r\n\r\n// board - matrix;\r\n// board[y][x] - single cell, if null - empty,\r\n// if {mainCell:[x,y],width,height} - filled\r\n// const initialState = {\r\n//   board: [],\r\n// }\r\n\r\n// Set initial 2 items\r\nconst _fillInitialSquares = (x,y) => {\r\n  switch(x) {\r\n    // First item (2x3)\r\n    case 3: {\r\n      if(y === 2 || y === 3 || y === 4) {\r\n        return {\r\n          mainCell: [3,2],\r\n          width: 2,\r\n          height: 3\r\n        };\r\n      }\r\n      return null;\r\n      break;\r\n    }\r\n    case 4: {\r\n      if(y === 2 || y === 3 || y === 4) {\r\n        return {\r\n          mainCell: [3,2],\r\n          width: 2,\r\n          height: 3\r\n        }\r\n      }\r\n      return null;\r\n      break;\r\n    }\r\n    // Second Item (2x2)\r\n    case 8: {\r\n      if(y === 4 || y === 5) {\r\n        return {\r\n          mainCell: [8,4],\r\n          width: 2,\r\n          height: 2\r\n        }\r\n      }\r\n      return null;\r\n      break;\r\n    }\r\n    case 9: {\r\n      if(y === 4 || y === 5) {\r\n        return {\r\n          mainCell: [8,4],\r\n          width: 2,\r\n          height: 2\r\n        }\r\n      }\r\n      return null;\r\n      break;\r\n    }\r\n    default: {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\n// Fill the matrix\r\nconst _fillInitialState = () => {\r\n  const board = [];\r\n  for (let y = yMin; y <= yMax; y++) {\r\n    board[y] = [];\r\n    for (let x = xMin; x <= xMax; x++) {\r\n      board[y][x] = _fillInitialSquares(x,y);\r\n    }\r\n  }\r\n  return {board};\r\n}\r\n\r\nexport default (state = _fillInitialState(), action) => {\r\n  switch (action.type) {\r\n    case SQUARES_FILL: {\r\n      // immutable way\r\n      const newBoard = [...state.board];\r\n      const {squares, mainCell, width, height} = action;\r\n      squares.forEach(square => {\r\n        const [x,y] = square;\r\n        newBoard[y][x] = {\r\n          mainCell,\r\n          width,\r\n          height\r\n        };\r\n      })\r\n      return {\r\n        ...state,\r\n        board: newBoard,\r\n      }\r\n    }\r\n    case SQUARES_RELEASE: {\r\n      const newBoard = [...state.board];\r\n      action.squares.forEach(square => {\r\n        const [x,y] = square;\r\n        newBoard[y][x] = null;\r\n      })\r\n      return {\r\n        ...state,\r\n        board: newBoard,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","const xMin = 0;\r\nconst xMax = 16;\r\nconst yMin = 0;\r\nconst yMax = 5;\r\n\r\nexport {\r\n  xMin, xMax, yMin, yMax\r\n}","import {ALERT_REMOVE, ALERT_SET} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ALERT_SET:\r\n      return [\r\n        ...state,\r\n        action.alert\r\n      ]\r\n    case ALERT_REMOVE:\r\n      return state.filter(alert => alert.id !== action.alertId)\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  DRAGGED_ITEM_SET,\r\n  DRAGGED_ITEM_RELEASE,\r\n  HOVERED_SQUARES_SET,\r\n  HOVERED_SQUARES_REMOVE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  mainCell: null,\r\n  width: null,\r\n  height: null,\r\n\r\n  xUp: null,\r\n  xDown: null,\r\n  yUp: null,\r\n  yDown: null,\r\n\r\n  // Square, hovered with mouse\r\n  hoveredSquare: null,\r\n  // All hovered squares depending on the size of the item\r\n  allHoveredSquares: [],\r\n\r\n  canDrop: false,\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case DRAGGED_ITEM_SET: {\r\n      const {mainCell, width, height,xUp,xDown,yUp,yDown} = action;\r\n      return {\r\n        ...state,\r\n        mainCell,\r\n        width,\r\n        height,\r\n        xUp,\r\n        xDown,\r\n        yUp,\r\n        yDown\r\n      }\r\n    }\r\n    case DRAGGED_ITEM_RELEASE:\r\n    case HOVERED_SQUARES_REMOVE: {\r\n      return initialState;\r\n    }\r\n    case HOVERED_SQUARES_SET: {\r\n      return {\r\n        ...state,\r\n        hoveredSquare: action.point,\r\n        allHoveredSquares: action.squares,\r\n        canDrop: action.canDrop,\r\n      }\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","export const ItemTypes = {\r\n  ITEM: 'item'\r\n}","import {\r\n  EQUIPPED_ITEM_SET,\r\n  EQUIPPED_ITEM_REMOVE\r\n} from \"../actions/types\";\r\nimport {ItemTypes} from \"../../constants/dnd/types\";\r\n\r\n// cells[x] - {id: number, allowedItemType: string, item: null | {mainCell, width, height}}\r\nconst initialState = {\r\n  cells: [],\r\n}\r\n\r\nconst fillInitialState = () => {\r\n  const cells = [];\r\n  for(let i = 0; i < 10; i++) {\r\n    if(i === 0) {\r\n      cells[i] = {\r\n        id: i,\r\n        allowedItemType: ItemTypes.ITEM,\r\n        item: null,\r\n      }\r\n    } else {\r\n      cells[i] = {\r\n        id: i,\r\n        allowedItemType: 'SomeOtherType',\r\n        item: null,\r\n      }\r\n    }\r\n  }\r\n  return {cells};\r\n}\r\n\r\nexport default (state = fillInitialState(), action) => {\r\n  switch (action.type) {\r\n    case EQUIPPED_ITEM_SET: {\r\n      const cells = [...state.cells];\r\n      cells[action.id] = {\r\n        ...cells[action.id],\r\n        item: action.item,\r\n      }\r\n      return {\r\n        ...state,\r\n        cells,\r\n      }\r\n    }\r\n    case EQUIPPED_ITEM_REMOVE: {\r\n      const cells = [...state.cells];\r\n      cells[action.id] = {\r\n        ...cells[action.id],\r\n        item: null,\r\n      }\r\n      return {\r\n        ...state,\r\n        cells,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport boardReducer from './board';\r\nimport alertReducer from './alert';\r\nimport draggedItemReducer from './draggedItem';\r\nimport equippedItemsReducer from './equippedItems';\r\n\r\nexport default combineReducers({\r\n  board: boardReducer,\r\n  alert: alertReducer,\r\n  draggedItem: draggedItemReducer,\r\n  equippedItems: equippedItemsReducer,\r\n})","// board\r\nexport const SQUARES_FILL = 'SQUARES_FILL';\r\nexport const SQUARES_RELEASE = 'SQUARES_RELEASE';\r\n\r\n// alerts\r\nexport const ALERT_SET = 'ALERT_SET';\r\nexport const ALERT_REMOVE = 'ALERT_REMOVE';\r\n\r\n// dragged item\r\nexport const DRAGGED_ITEM_SET = 'DRAGGED_ITEM_SET';\r\nexport const DRAGGED_ITEM_RELEASE = 'DRAGGED_ITEM_RELEASE';\r\n\r\n// hovered squares\r\nexport const HOVERED_SQUARES_SET = 'HOVERED_SQUARES_SET';\r\nexport const HOVERED_SQUARES_REMOVE = 'HOVERED_SQUARES_REMOVE';\r\n\r\n// equipped items\r\nexport const EQUIPPED_ITEM_SET = 'EQUIPPED_ITEM_SET';\r\nexport const EQUIPPED_ITEM_REMOVE = 'EQUIPPED_ITEM_REMOVE';\r\n\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nexport default createStore(rootReducer, composeWithDevTools(\r\n  applyMiddleware(...middleware)\r\n));\r\n","export default {\r\n  breakpoints: {\r\n    md: 780,\r\n  },\r\n  colors: {\r\n    gray: '#515754',\r\n    black: '#1e2120',\r\n    lighterGray: '#59635f',\r\n    lightGray: '#878c8a',\r\n\r\n    success: '#1eff00',\r\n    warning: '#f6ff00',\r\n    danger: '#ff0000',\r\n  }\r\n}","import React from 'react'\r\nimport styled from \"styled-components\";\r\nimport theme from \"../../constants/css/theme\";\r\n\r\nconst Container = styled.div`\r\n  backgroundColor: background: linear-gradient(${theme.colors.gray},${theme.colors.lighterGray});\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justifyContent: center;\r\n  alignItems: center;\r\n`;\r\n\r\n\r\n\r\ninterface Props {\r\n  children: any;\r\n}\r\n\r\nconst Square: React.FC<Props> = ({children}) => {\r\n  return (\r\n    <Container>\r\n      {children}\r\n    </Container>\r\n  )\r\n}\r\n\r\n//@ts-ignore\r\nexport default Square;","import {ALERT_SET, ALERT_REMOVE} from \"./types\";\r\nimport {v4 as uuid4} from 'uuid';\r\n\r\nconst _setAlert = (alert) => {\r\n  return {type: ALERT_SET, alert}\r\n}\r\nconst _removeAlert = (alertId) => {\r\n  return {type: ALERT_REMOVE, alertId}\r\n}\r\n\r\nexport const setAlert = (msg, alertType, timeout = 4000) => {\r\n  return dispatch => {\r\n    const id = uuid4();\r\n    dispatch(_setAlert({msg, alertType, id}));\r\n\r\n    setTimeout(() => dispatch(_removeAlert(id)), timeout);\r\n  }\r\n}","import {SQUARES_FILL, SQUARES_RELEASE} from \"./types\";\r\nimport {xMax, xMin, yMax, yMin} from \"../../constants/boardDimensions\";\r\nimport store from \"../store\";\r\nimport {setAlert} from \"./alert\";\r\n\r\n// mainCell, width, height // mainCell = [x,y]\r\nconst _addInventory = (boxId,x,y) => {\r\n  return (dispatch, getState) => {\r\n    const {board} = getState().board;\r\n\r\n    const allAddedSquares = [];\r\n    let alertMsg = '';\r\n\r\n    for (let i = boxId[0]; i < boxId[0] + x; i++) {\r\n      for (let j = boxId[1]; j < boxId[1] + y; j++) {\r\n        allAddedSquares.push([i, j]);\r\n      }\r\n    }\r\n\r\n    let canAdd = true;\r\n\r\n    for (let i = xMin; i <= xMax; i++) {\r\n      for (let j = yMin; j <= yMax; j++) {\r\n        allAddedSquares.forEach(hoveredSquare => {\r\n          const [hoveredX, hoveredY] = hoveredSquare;\r\n          if (hoveredX < xMin || hoveredX > xMax || hoveredY < yMin || hoveredY > yMax) {\r\n            canAdd = false;\r\n            alertMsg = 'The object can not be placed outside the board.\\n' +\r\n              'The board has the following coordinates:\\n' +\r\n              `x: ${xMin} - ${xMax}\\ny: ${yMin} - ${yMax}`;\r\n          } else if (hoveredX === i && hoveredY === j) {\r\n            if (board[j][i] !== null) {\r\n                canAdd = false;\r\n              alertMsg = 'The object can not be placed on the other object!'\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    if(canAdd) {\r\n      dispatch(_addItems(allAddedSquares, boxId, x, y));\r\n    } else {\r\n      dispatch(setAlert('Sorry. ' + alertMsg, 'danger'));\r\n    }\r\n  }\r\n}\r\n\r\n// add function to be able use from console\r\nwindow.addInventory = (boxId, x, y) => store.dispatch(_addInventory(boxId, x, y));\r\n\r\nconst _addItems = (squares, mainCell, width, height) => {\r\n  return {type: SQUARES_FILL, squares, mainCell, width, height};\r\n}\r\n\r\nconst _removeItems = (coordsArr) => {\r\n  return {type: SQUARES_RELEASE, squares: coordsArr};\r\n}\r\n\r\n// add items fetched from hovered items\r\nconst addItems = ([x,y]) => {\r\n  return (dispatch, getState) => {\r\n    const {allHoveredSquares, xDown, yDown, width, height} = getState().draggedItem;\r\n\r\n    dispatch(_addItems(allHoveredSquares, [x - xDown, y - yDown], width, height));\r\n  }\r\n}\r\n\r\n// remove items from board\r\nconst removeItems = ([x,y], width = 1, height = 1) => {\r\n  return dispatch => {\r\n    const itemsToRemove = [];\r\n    for(let currX = x; currX < x + width; currX++) {\r\n      for(let currY = y; currY < y + height; currY++) {\r\n        itemsToRemove.push([currX,currY]);\r\n      }\r\n    }\r\n\r\n    dispatch(_removeItems(itemsToRemove));\r\n  }\r\n}\r\n\r\nexport {\r\n  addItems,\r\n  removeItems\r\n}","import React from 'react';\r\n\r\nconst Overlay = ({color}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        position: 'absolute',\r\n        top: '0',\r\n        left: '0',\r\n        height: '100%',\r\n        width: '100%',\r\n        zIndex: 0,\r\n        opacity: 0.5,\r\n        backgroundColor: color,\r\n      }}/>\r\n  );\r\n};\r\n\r\nexport default Overlay;","import {DRAGGED_ITEM_SET, HOVERED_SQUARES_SET, HOVERED_SQUARES_REMOVE} from \"./types\";\r\nimport {xMin, xMax, yMin, yMax} from \"../../constants/boardDimensions\";\r\n\r\nconst _addDraggedItem = (mainCell, width, height, xUp, xDown, yUp, yDown) => {\r\n  return {type: DRAGGED_ITEM_SET, mainCell, width, height, xUp, xDown, yUp, yDown};\r\n};\r\n\r\nconst _setHoveredSquares = (pointCoords, allHoveredSquares, canDrop) => {\r\n  return {type: HOVERED_SQUARES_SET, point: pointCoords, squares: allHoveredSquares, canDrop};\r\n};\r\n\r\nconst removeHoveredSquares = () => {\r\n  return {type: HOVERED_SQUARES_REMOVE};\r\n};\r\n\r\nconst addDraggedItem = ([x, y], mainCell = [x, y], width = 1, height = 1) => {\r\n  return dispatch => {\r\n    const [mainCellX, mainCellY] = mainCell;\r\n    // Maximum X and Y for given item (border)\r\n    const xMax = mainCellX + width - 1;\r\n    const yMax = mainCellY + height - 1;\r\n\r\n    // How many squares right from dragged point item fills (===0 when item 1x1 square)\r\n    const xUp = xMax - x;\r\n    // How many squares up from dragged point item fills\r\n    const yUp = yMax - y;\r\n    // How many squares left from dragged point item fills\r\n    const xDown = x - mainCellX;\r\n    // How many squares down from dragged point item fills\r\n    const yDown = y - mainCellY;\r\n\r\n    dispatch(_addDraggedItem(mainCell, width, height, xUp, xDown, yUp, yDown));\r\n  };\r\n};\r\n\r\nconst setHoveredSquares = ([x, y]) => {\r\n  return (dispatch, getState) => {\r\n    const {draggedItem: {xDown, xUp, yDown, yUp, mainCell, width, height}, board: {board}} = getState();\r\n\r\n    const allHoveredSquares = [];\r\n\r\n    for (let i = x - xDown; i <= x + xUp; i++) {\r\n      for (let j = y - yDown; j <= y + yUp; j++) {\r\n        allHoveredSquares.push([i, j]);\r\n      }\r\n    }\r\n    // here we want to check canDrop\r\n    let canDrop = true;\r\n    for (let i = xMin; i <= xMax; i++) {\r\n      for (let j = yMin; j <= yMax; j++) {\r\n        allHoveredSquares.forEach(hoveredSquare => {\r\n          const [hoveredX, hoveredY] = hoveredSquare;\r\n          if (hoveredX < xMin || hoveredX > xMax || hoveredY < yMin || hoveredY > yMax) {\r\n            canDrop = false;\r\n          } else if (hoveredX === i && hoveredY === j) {\r\n            if (board[j][i] !== null) {\r\n              if(hoveredX < mainCell[0] || hoveredX > mainCell[0] + width - 1\r\n                || hoveredY < mainCell[1] || hoveredY > mainCell[1] + height - 1) {\r\n                canDrop = false;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    dispatch(_setHoveredSquares([x, y], allHoveredSquares, canDrop));\r\n  }\r\n};\r\n\r\nexport {\r\n  addDraggedItem,\r\n  removeHoveredSquares,\r\n  setHoveredSquares\r\n}","import React, {useState, useEffect} from 'react'\r\nimport Square from \"../../components/square/Square\";\r\nimport {ItemTypes} from \"../../constants/dnd/types\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addItems, removeItems} from \"../../redux/actions/board\";\r\nimport Overlay from \"../../components/square/Overlay\";\r\nimport {setHoveredSquares} from \"../../redux/actions/draggedItem\";\r\nimport styled from \"styled-components\";\r\nimport theme from \"../../constants/css/theme\";\r\n\r\nconst Div = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  box-sizing: border-box; \r\n  border: 1px solid ${theme.colors.lightGray}; \r\n`;\r\n\r\nconst BoardSquare = ({coords: [x,y], children}) => {\r\n  const [isOver,setIsOver] = useState(false);\r\n\r\n  const [hoveredSquare, allHoveredSquares, canDropRedux, mainCell, width, height] =\r\n    // @ts-ignore - board does not exists on DefaultRootState\r\n    useSelector(({board, draggedItem}) =>\r\n    ([draggedItem.hoveredSquare, draggedItem.allHoveredSquares,\r\n    draggedItem.canDrop, draggedItem.mainCell, draggedItem.width, draggedItem.height]));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [{}, drop] = useDrop({\r\n    accept: ItemTypes.ITEM,\r\n    drop: (item, monitor) => {\r\n      if(monitor.canDrop()) {\r\n        if(item.isInventoryId === false) {\r\n          dispatch(removeItems(mainCell, width, height));\r\n        }\r\n        dispatch(addItems([x,y]));\r\n      }\r\n    },\r\n    hover: () => {\r\n      if(!hoveredSquare || (hoveredSquare[0] !== x || hoveredSquare[1] !== y)) {\r\n        dispatch(setHoveredSquares([x,y]));\r\n      }\r\n    },\r\n    canDrop: () => canDropRedux,\r\n  })\r\n\r\n  useEffect(() => {\r\n    const idx = allHoveredSquares.findIndex((el) => el[0] === x && el[1] === y);\r\n    if(idx !== -1) {\r\n      setIsOver(true);\r\n    } else {\r\n      setIsOver(false);\r\n    }\r\n  },[x,y,allHoveredSquares])\r\n\r\n  return (\r\n    <Div ref={drop}>\r\n      <Square>{children}</Square>\r\n      {isOver && !canDropRedux && <Overlay color={theme.colors.danger} />}\r\n      {isOver && canDropRedux && <Overlay color={theme.colors.success} />}\r\n    </Div>\r\n  )\r\n}\r\n\r\nexport default BoardSquare;","import React from 'react';\r\nimport styled from \"styled-components\";\r\n\r\nconst Span = styled.span`\r\n  display: block;\r\n  position: relative;\r\n  cursor: move;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #000;\r\n`;\r\n\r\ninterface Props {\r\n  children: any,\r\n  forwardedRef: React.Ref<any>;\r\n}\r\n\r\nconst CommonItem: React.FC<Props> = ({children, forwardedRef}) => {\r\n  return (\r\n    <Span ref={forwardedRef}>{children}</Span>\r\n  );\r\n};\r\n\r\n//@ts-ignore\r\nexport default CommonItem;","import React from 'react';\r\nimport {ItemTypes} from '../../constants/dnd/types';\r\nimport {useDrag} from 'react-dnd';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {addDraggedItem, removeHoveredSquares} from \"../../redux/actions/draggedItem\";\r\nimport CommonItem from \"../../components/items/CommonItem/CommonItem\";\r\nimport {removeEquippedItem} from \"../../redux/actions/equippedItems\";\r\n\r\nconst SquareCommonItem = ({coords: [x, y], mainCell, width, height, isInventoryId = false}) => {\r\n  const dispatch = useDispatch();\r\n  // Allow drag\r\n  const [{}, drag] = useDrag({\r\n    item: {type: ItemTypes.ITEM, isInventoryId},\r\n    begin() {\r\n      dispatch(addDraggedItem([x, y], mainCell, width, height));\r\n    },\r\n    end(item, monitor) {\r\n      console.log('end');\r\n      // if dropped from the inventory\r\n      if(monitor.didDrop() && isInventoryId !== false) {\r\n          dispatch(removeEquippedItem(isInventoryId));\r\n      }\r\n      dispatch(removeHoveredSquares());\r\n\r\n    },\r\n    collect: () => {\r\n      return ({});\r\n    }\r\n  })\r\n\r\n  return (\r\n    <CommonItem forwardedRef={drag}>\r\n      {/*♘*/}\r\n    </CommonItem>\r\n  );\r\n};\r\n\r\nexport default SquareCommonItem;","import {EQUIPPED_ITEM_SET, EQUIPPED_ITEM_REMOVE} from \"./types\";\r\n\r\nconst _setEquippedItem = (cellId, item) => {\r\n  return {type: EQUIPPED_ITEM_SET, id: cellId, item}\r\n}\r\n\r\nconst _removeEquippedItem = (cellId) => {\r\n  return {type: EQUIPPED_ITEM_REMOVE, id: cellId}\r\n}\r\n\r\nconst setEquippedItem = (cellId) => {\r\n  return (dispatch, getState) => {\r\n    const item = getState().draggedItem;\r\n    const {mainCell, width, height} = item;\r\n\r\n    dispatch(_setEquippedItem(cellId, {mainCell, width, height}));\r\n  }\r\n}\r\n\r\nconst removeEquippedItem = (cellId) => {\r\n  return dispatch => {\r\n    dispatch(_removeEquippedItem(cellId));\r\n  }\r\n}\r\n\r\nexport {setEquippedItem, removeEquippedItem};","import React, {useEffect, useRef, useState} from 'react';\r\nimport BoardSquare from \"../../containers/BoardSquare/BoardSquare\";\r\nimport {yMax, yMin, xMax, xMin} from \"../../constants/boardDimensions\";\r\nimport {useSelector} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport SquareCommonItem from \"../../containers/SquareCommonItem/SquareCommonItem\";\r\nimport theme from \"../../constants/css/theme\";\r\n\r\nconst Container = styled.div`\r\n    width: 68%;\r\n    margin-left: 1%;\r\n    margin-right: 1%;\r\n    display: grid;\r\n    grid-template-columns: repeat(17, 1fr);\r\n    grid-template-rows: repeat(6, 1fr);\r\n    overflow: hidden;\r\n    @media (max-width: ${theme.breakpoints.md}px) {\r\n      margin: 1% auto;\r\n      width: 100%;\r\n    }\r\n`;\r\n\r\nconst Board = () => {\r\n  const squares = [];\r\n  // @ts-ignore - board does not exists on state\r\n  const boardItems = useSelector(state => state.board.board);\r\n  // proportional to width (17x6)\r\n  const [boardHeight, setBoardHeight] = useState(null);\r\n\r\n  const boardEl:React.MutableRefObject<null> | null = useRef(null);\r\n\r\n  // Make element proportional no matter where it placed\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      const current: HTMLElement | null = boardEl.current;\r\n      const width = current.clientWidth;\r\n      setBoardHeight(width * 0.35294);\r\n    }\r\n\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Call handler right away so state gets updated with initial size\r\n    handleResize();\r\n\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n\r\n  const renderSquare = (y: number, x: number) => {\r\n    if (!boardItems) {\r\n      return null;\r\n    }\r\n    let squareContent = null;\r\n    // Check if filled\r\n    const item = boardItems[y][x];\r\n    if (item) {\r\n      const {mainCell, width, height} = item;\r\n      squareContent = <SquareCommonItem coords={[x, y]} mainCell={mainCell}\r\n                                        width={width} height={height}/>;\r\n    }\r\n    return (\r\n      <BoardSquare key={x*20+y} coords={[x, y]}>\r\n        {squareContent}\r\n      </BoardSquare>\r\n    );\r\n  }\r\n\r\n  for (let y = yMin; y <= yMax; y++) {\r\n    for (let x = xMin; x <= xMax; x++) {\r\n      squares.push(renderSquare(y, x));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container ref={boardEl} style={{height: `${boardHeight+0}px`}}>\r\n      {squares}\r\n    </Container>\r\n  )\r\n};\r\n\r\nexport default Board;","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\nimport classes from './Alert.module.css';\r\n\r\nconst Alert = () => {\r\n  const alerts = useSelector(({alert}) => alert);\r\n\r\n  const returnContent = alerts.length > 0 && alerts.map((alert,idx) => (\r\n    <div key={alert.id} className={`${classes.Alert} ${classes['alert-'+alert.alertType]}`}\r\n         style={{left: `${(window.innerWidth/2-150).toString()}px`, top: `${idx*100+60}px`}}>\r\n      {alert.msg}\r\n    </div>\r\n  ))\r\n\r\n\r\n  return returnContent;\r\n}\r\n\r\nexport default Alert;","import React from 'react';\r\nimport styled from \"styled-components\";\r\nimport {useDrop} from \"react-dnd\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {removeItems} from \"../../../redux/actions/board\";\r\nimport {setEquippedItem} from \"../../../redux/actions/equippedItems\";\r\nimport Overlay from \"../../square/Overlay\";\r\nimport theme from \"../../../constants/css/theme\";\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    position: relative;\r\n    height: 16%;\r\n    border-radius: 5px;\r\n    background: linear-gradient(${theme.colors.lightGray},${theme.colors.lighterGray});\r\n    &:last-child {\r\n      background: linear-gradient(${theme.colors.lightGray},${theme.colors.gray});\r\n    } \r\n    @media (max-width: ${theme.breakpoints.md}px) {\r\n      height: 100%;\r\n      width: 17%;\r\n      flex-direction: row;\r\n    }\r\n`;\r\n\r\nconst EquippedInventoryItem = ({cellId, allowedItemType, item, children}) => {\r\n  const dispatch = useDispatch();\r\n  const [draggedItem, cells] = useSelector(({draggedItem, equippedItems}) =>\r\n    ([draggedItem, equippedItems.cells]));\r\n\r\n  const {mainCell, width, height} = draggedItem;\r\n\r\n  const [{isOver, canDrop}, drop] = useDrop({\r\n    accept: allowedItemType,\r\n    drop: (item, monitor) => {\r\n      if(monitor.canDrop()) {\r\n        dispatch(removeItems(mainCell, width, height));\r\n        dispatch(setEquippedItem(cellId));\r\n      }\r\n    },\r\n    canDrop: () => cells.find(cell => (cell.id === cellId && cell.item === null)),\r\n    collect: (monitor) => {\r\n      return ({isOver: monitor.isOver({ shallow: true }), canDrop: monitor.canDrop()});\r\n    }\r\n  })\r\n  return (\r\n    <Container ref={drop}>\r\n      {children}\r\n      {isOver && canDrop && <Overlay color={theme.colors.green} />}\r\n      {isOver && !canDrop && <Overlay color={theme.colors.danger} />}\r\n      {!isOver && canDrop && <Overlay color={theme.colors.warning} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EquippedInventoryItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport EquippedInventoryItem from \"./equippedInventoryItem/equippedInventoryItem\";\r\nimport SquareCommonItem from \"../../containers/SquareCommonItem/SquareCommonItem\";\r\nimport theme from \"../../constants/css/theme\";\r\n\r\nconst EquippedInventoryContainer = ({cells}) => {\r\n\r\n  const Container = styled.div`\r\n    width: 15%;\r\n    max-width: 15%;\r\n    height: 100vh;\r\n    box-sizing: border-box;\r\n    padding: 2%;\r\n    background: linear-gradient(${theme.colors.gray},${theme.colors.lighterGray});\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    @media (max-width: ${theme.breakpoints.md}px) {\r\n      height: 20vh;\r\n      min-width: 100%;\r\n      flex-direction: row;\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <Container>\r\n      {cells.map(cell => {\r\n        let children = null;\r\n        if(cell.item) {\r\n          const {mainCell, width, height} = cell.item;\r\n          children = <SquareCommonItem coords={mainCell} mainCell={mainCell}\r\n                                       width={width} height={height} isInventoryId={cell.id}/>\r\n        }\r\n\r\n        return (\r\n          <EquippedInventoryItem cellId={cell.id} item={cell.item}\r\n                                 allowedItemType={cell.allowedItemType}>\r\n            {children}\r\n          </EquippedInventoryItem>\r\n        );\r\n      })}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EquippedInventoryContainer;","import React from 'react';\nimport {DndProvider} from 'react-dnd'\nimport {HTML5Backend} from 'react-dnd-html5-backend'\nimport styled from 'styled-components';\nimport Board from \"./components/board/Board\";\nimport Alert from \"./components/layout/Alert/Alert\";\nimport EquippedInventoryContainer from \"./components/equippedInventory/equippedInventoryContainer\";\nimport {useSelector} from \"react-redux\";\nimport theme from \"./constants/css/theme\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-grow: 1;\n    padding: 2%;\n    background: linear-gradient(${theme.colors.gray},${theme.colors.black});\n    @media (max-width: ${theme.breakpoints.md}px) {\n        flex-direction: column;\n    }\n}\n`\n\nconst App: React.FC = () => {\n  // @ts-ignore - Property 'equippedItems' does not exist on type 'DefaultRootState'\n  const equippedItemsCells = useSelector(({equippedItems}) => equippedItems.cells);\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <Container>\n        <Alert/>\n        <EquippedInventoryContainer cells={equippedItemsCells.slice(0, 5)}/>\n        <Board/>\n        <EquippedInventoryContainer cells={equippedItemsCells.slice(5, 10)}/>\n      </Container>\n    </DndProvider>\n  );\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}